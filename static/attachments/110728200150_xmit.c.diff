--- xmit.c.orig	2011-07-28 19:31:10.000000000 -0400
+++ xmit.c	2011-07-28 19:34:34.000000000 -0400
@@ -495,50 +495,22 @@
 			ath_tx_complete_buf(sc, bf, txq, &bf_head, ts,
 				!txfail, sendbar);
 		} else {
-			/* retry the un-acked ones */
-			if (!(sc->sc_ah->caps.hw_caps & ATH9K_HW_CAP_EDMA)) {
-				if (bf->bf_next == NULL && bf_last->bf_stale) {
-					struct ath_buf *tbf;
-
-					tbf = ath_clone_txbuf(sc, bf_last);
-					/*
-					 * Update tx baw and complete the
-					 * frame with failed status if we
-					 * run out of tx buf.
-					 */
-					if (!tbf) {
-						spin_lock_bh(&txq->axq_lock);
-						ath_tx_update_baw(sc, tid, fi->seqno);
-						spin_unlock_bh(&txq->axq_lock);
-
-						bf->bf_state.bf_type |=
-							BUF_XRETRY;
-						ath_tx_rc_status(sc, bf, ts, nframes,
-								nbad, 0, false);
-						ath_tx_complete_buf(sc, bf, txq,
-								    &bf_head,
-								    ts, 0, 0);
-						break;
-					}
-
-					ath9k_hw_cleartxdesc(sc->sc_ah,
-							     tbf->bf_desc);
-					list_add_tail(&tbf->list, &bf_head);
-				} else {
-					/*
-					 * Clear descriptor status words for
-					 * software retry
-					 */
-					ath9k_hw_cleartxdesc(sc->sc_ah,
-							     bf->bf_desc);
-				}
-			}
-
-			/*
-			 * Put this buffer to the temporary pending
-			 * queue to retain ordering
-			 */
-			list_splice_tail_init(&bf_head, &bf_pending);
+		  /* Do not retry the un-acked ones */
+		  /*
+		   * Update tx baw and complete the
+		   * frame with failed status.
+		   */
+		  spin_lock_bh(&txq->axq_lock);
+		  ath_tx_update_baw(sc, tid, fi->seqno);
+		  spin_unlock_bh(&txq->axq_lock);
+
+		  bf->bf_state.bf_type |=
+		    BUF_XRETRY;
+		  ath_tx_rc_status(sc, bf, ts, nframes,
+				   nbad, 0, false);
+		  ath_tx_complete_buf(sc, bf, txq,
+				      &bf_head,
+				      ts, 0, 0);
 		}
 
 		bf = bf_next;
